
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-unit-test using AI Type  and AI Model

ROOST_METHOD_HASH=getObscured_796c9349ae
ROOST_METHOD_SIG_HASH=getObscured_768abccef5

"""
Scenario 1: Validate the getObscured method when Boolean value is true

Details:
  TestName: testGetObscuredTrue
  Description: The test is meant to check the functionality of getObscured method when the Boolean value is true.
Execution:
  Arrange: Create an instance of CredentialsObscuredGet200Response and set the obscured value to true.
  Act: Invoke the getObscured method.
  Assert: Use JUnit assertions to verify that the returned value from getObscured is true.
Validation:
  The assertion aims to verify that the getObscured method correctly returns the Boolean value that was set. The expected result is true because we set obscured to true. This test ensures that the getObscured method is functioning correctly when the Boolean value is true.

Scenario 2: Validate the getObscured method when Boolean value is false

Details:
  TestName: testGetObscuredFalse
  Description: The test is meant to check the functionality of getObscured method when the Boolean value is false.
Execution:
  Arrange: Create an instance of CredentialsObscuredGet200Response and set the obscured value to false.
  Act: Invoke the getObscured method.
  Assert: Use JUnit assertions to verify that the returned value from getObscured is false.
Validation:
  The assertion aims to verify that the getObscured method correctly returns the Boolean value that was set. The expected result is false because we set obscured to false. This test ensures that the getObscured method is functioning correctly when the Boolean value is false.

Scenario 3: Validate the getObscured method when Boolean value is null

Details:
  TestName: testGetObscuredNull
  Description: The test is meant to check the functionality of getObscured method when the Boolean value is null.
Execution:
  Arrange: Create an instance of CredentialsObscuredGet200Response and set the obscured value to null.
  Act: Invoke the getObscured method.
  Assert: Use JUnit assertions to verify that the returned value from getObscured is null.
Validation:
  The assertion aims to verify that the getObscured method correctly returns the Boolean value that was set. The expected result is null because we set obscured to null. This test ensures that the getObscured method is functioning correctly when the Boolean value is null.
"""
*/

// ********RoostGPT********

package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Tag;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

public class CredentialsObscuredGet200ResponseGetObscuredTest {

	@Test
	@Tag("valid")
	public void testGetObscuredTrue() {
		// Arrange
		CredentialsObscuredGet200Response response = new CredentialsObscuredGet200Response();
		response.setObscured(true);
		// Act
		Boolean result = response.getObscured();
		// Assert
		assertTrue(result);
	}

	@Test
	@Tag("valid")
	public void testGetObscuredFalse() {
		// Arrange
		CredentialsObscuredGet200Response response = new CredentialsObscuredGet200Response();
		response.setObscured(false);
		// Act
		Boolean result = response.getObscured();
		// Assert
		assertFalse(result);
	}

	@Test
	@Tag("boundary")
	public void testGetObscuredNull() {
		// Arrange
		CredentialsObscuredGet200Response response = new CredentialsObscuredGet200Response();
		response.setObscured(null);
		// Act
		Boolean result = response.getObscured();
		// Assert
		assertNull(result);
	}

}